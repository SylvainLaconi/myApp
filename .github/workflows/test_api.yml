name: Run test api

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  API-test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      API_PORT: 8000
      FRONT_PORT: 3000
      PORT: 8080
      API_HOST: '0.0.0.0'
      API_URL: http://0.0.0.0:8000
      POSTGRES_PORT: 5432
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_PASSWORD: password
      POSTGRES_USER: myapp
      POSTGRES_DB: my-app-db

    steps:

    - name: Check env variables
      run: |
        echo Display the NODE_ENV: $NODE_ENV
        echo Display the API_PORT: $API_PORT
        echo Display the PORT: $PORT
        echo Display the API_HOST: $API_HOST
        echo Display the API_URL: $API_URL
        echo Display the POSTGRES_PORT: $POSTGRES_PORT
        echo Display the POSTGRES_PASSWORD: $POSTGRES_PASSWORD

    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Run npm install
    #   run: npm run install:api

    # - name: Build and run Docker image
    #   run: docker-compose -f docker-compose.test-api.yaml up -d --build

    # - name: Sleep for 10 seconds
    #   uses: jakejarvis/wait-action@master
    #   with:
    #     time: '10s'

    # - name: Run unit tests
    #   run: docker-compose exec myapp-api npm test

    # - name: Run E2E tests
    #   run: docker-compose exec api npm run test:e2e

    # - name: Stop Docker image
    #   run: docker-compose down --remove-orphans

    - name: End
      run:  echo Test completed